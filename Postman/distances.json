{
	"info": {
		"_postman_id": "f602709c-327c-491a-8c2f-b06e4f009b80",
		"name": "distances",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "25883428-f602709c-327c-491a-8c2f-b06e4f009b80"
	},
	"item": [
		{
			"name": "base",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1fb1167c-aeee-4dc5-9502-ffce5e0ea900",
						"exec": [
							"pm.test(\"Response is HTTP200 status\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "b770a715-9132-4581-9325-cc1326925982",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"requestType\": \"distances\",\n    \"places\": [],\n    \"earthRadius\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/distances",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "robeyclay-test-one-place",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "71c2db2d-3ff5-4bf8-92e9-44c27bdb0359",
						"exec": [
							"pm.test(\"Testing for one location. Distances should be size 1\", () => {",
							"    const response = pm.response.json();",
							"    const expectedDistanceSize = 1;",
							"    pm.expect(response.distances.length).to.eql(expectedDistanceSize);",
							"});",
							"",
							"pm.test(\"Testing for 1 location. Element at index 0 should be 0\", () => {",
							"    const response = pm.response.json();",
							"    const expectedDistanceSize = 0;",
							"    pm.expect(response.distances[0]).to.eql(expectedDistanceSize);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "34d59c3f-abbf-4b58-a985-deef8668bd28",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"requestType\": \"distances\",\n    \"places\": [{\"name\": \"Malto Brewery\", \"latitude\": \"41.321429\", \"longitude\": \"19.794341\"}],\n    \"earthRadius\": 1\n}"
				},
				"url": {
					"raw": "{{BASE_URL}}/api/distances",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "BBD-postman-DistanceTest1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ba748cb0-b6e3-477c-9823-405dfb54998b",
						"exec": [
							"pm.test(\"tamo: Testing 4 locations w/ duplicate location. Distances should be 4\", () => {\r",
							"    const response = pm.response.json();\r",
							"    const expectedDistanceSize = 4;\r",
							"    pm.expect(response.distances.length).to.eql(expectedDistanceSize);\r",
							"});\r",
							"\r",
							"pm.test(\"tamo: Testing distances between each location...\", () => {\r",
							"    const response = pm.response.json();\r",
							"    const expectedDistance1TO2 = 314;\r",
							"    const expectedDistance2TO3 = 0;\r",
							"    const expectedDistance3TO4 = 314;\r",
							"    const expectedDistance4TO1 = 0;\r",
							"    pm.expect(response.distances[0]).to.eql(expectedDistance1TO2);\r",
							"    pm.expect(response.distances[1]).to.eql(expectedDistance2TO3);\r",
							"    pm.expect(response.distances[2]).to.eql(expectedDistance3TO4);\r",
							"    pm.expect(response.distances[3]).to.eql(expectedDistance4TO1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "7fbe5b3c-0372-4ec7-b0d5-1c30d0ecb538",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"requestType\": \"distances\",\r\n    \"places\": [{\"name\": \"Prime MeridianxEquator\", \"latitude\": \"0.0\", \"longitude\": \"0.0\"},\r\n               {\"name\": \"HalfWest\", \"latitude\": \"0.0\", \"longitude\": \"180.0\"},\r\n               {\"name\": \"HalfEast\", \"latitude\": \"0.0\", \"longitude\": \"-180.0\"},\r\n               {\"name\": \"Prime MeridianxEquator\", \"latitude\": \"0.0\", \"longitude\": \"0.0\"}],\r\n    \"earthRadius\": 100.0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/distances",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "cjbeall-test-a-quarter-around-the-world",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7b0da438-ef9e-4abc-a63d-6734b32a5f83",
						"exec": [
							"pm.test(\"Testing for a quarter around the world. Distances should be size 2\", () => {\r",
							"    const response = pm.response.json();\r",
							"    const expectedDistanceSize = 2;\r",
							"    pm.expect(response.distances.length).to.eql(expectedDistanceSize);\r",
							"});\r",
							"\r",
							"pm.test(\"Testing for one location. Element at index 0 should be 1571 for earth radius 1000\", () => {\r",
							"    const response = pm.response.json();\r",
							"    const expectedDistanceSize = 1571;\r",
							"    pm.expect(response.distances[0]).to.eql(expectedDistanceSize);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "7990160f-2844-4833-9a71-1e933a3c1299",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"requestType\": \"distances\",\r\n    \"places\": [{\"name\": \"place1\", \"latitude\": \"0\", \"longitude\": \"45\"}, \r\n               {\"name\": \"place2\", \"latitude\": \"0\", \"longitude\": \"-45\"}],\r\n    \"earthRadius\": 1000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/distances",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "ejpitera-test-4-hemishperes",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "864c5dbe-1598-4e48-ab2e-6c779905f748",
						"exec": [
							"pm.test(\"Testing all 4 hemispheres, Distances should be size 4\", () => {\r",
							"    const response = pm.response.json();\r",
							"    const expectedDistanceSize = 4;\r",
							"    pm.expect(response.distances.length).to.eql(expectedDistanceSize);\r",
							"});\r",
							"\r",
							"pm.test(\"Testing distances between each location\", () => {\r",
							"    const response = pm.response.json();\r",
							"    const expectedDistance1TO2 = 7440527;\r",
							"    const expectedDistance2TO3 = 15150747;\r",
							"    const expectedDistance3TO4 = 6413607;\r",
							"    const expectedDistance4TO1 = 10980343;\r",
							"    pm.expect(response.distances[0]).to.eql(expectedDistance1TO2);\r",
							"    pm.expect(response.distances[1]).to.eql(expectedDistance2TO3);\r",
							"    pm.expect(response.distances[2]).to.eql(expectedDistance3TO4);\r",
							"    pm.expect(response.distances[3]).to.eql(expectedDistance4TO1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "3ec1a84a-4a0d-4691-b18c-b033f102319e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"requestType\": \"distances\",\r\n    \"places\": [{\"name\": \"Colorado Mountain Brewery\", \"latitude\": \"38.84\", \"longitude\": \"-104.859\"},\r\n               {\"name\": \"Dama Bier Brewery\", \"latitude\": \"-22.739\", \"longitude\": \"-47.629\"},\r\n               {\"name\": \"Fujizakura Heights Beer\", \"latitude\": \"35.458\", \"longitude\": \"138.76\"},\r\n               {\"name\": \"Batch Brewing Company\", \"latitude\": \"-33.9\", \"longitude\": \"151.165\"}],\r\n    \"earthRadius\": 5225616\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/distances",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		},
		{
			"name": "evanloy-test-nomovement",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ac6130c5-730e-4890-8097-d83f1f558146",
						"exec": [
							"pm.test(\"Testing for a two places, same location. Distances should be size 2\", () => {",
							"    const response = pm.response.json();",
							"    const expectedDistanceSize = 2;",
							"    pm.expect(response.distances.length).to.eql(expectedDistanceSize);",
							"});",
							"",
							"pm.test(\"Testing distances between each location. Should be 0 for each.\", () => {",
							"    const response = pm.response.json();",
							"    const expectedDistance1TO2 = 0;",
							"    const expectedDistance2TO1 = 0;",
							"    pm.expect(response.distances[0]).to.eql(expectedDistance1TO2);",
							"    pm.expect(response.distances[1]).to.eql(expectedDistance2TO1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "0f90f1d7-5ca3-4e3f-a8be-933002eeeb60",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"requestType\": \"distances\",\n    \"places\": [{\"name\": \"origin\", \"latitude\": \"0\", \"longitude\": \"0\"},\n               {\"name\": \"origin\", \"latitude\": \"0\", \"longitude\": \"0\"}],\n    \"earthRadius\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/api/distances",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"api",
						"distances"
					]
				}
			},
			"response": []
		}
	]
}